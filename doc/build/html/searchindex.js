Search.setIndex({"docnames": ["Disctransformation", "Disctransformation.align_axis", "Disctransformation.core", "Disctransformation.example", "Disctransformation.transform", "Input_Format", "Requirements", "api", "index", "modules"], "filenames": ["Disctransformation.rst", "Disctransformation.align_axis.rst", "Disctransformation.core.rst", "Disctransformation.example.rst", "Disctransformation.transform.rst", "Input_Format.rst", "Requirements.rst", "api.rst", "index.rst", "modules.rst"], "titles": ["Disctransformation package", "Disctransformation.align_axis package", "Disctransformation.core package", "Disctransformation.example package", "Disctransformation.transform package", "Input File Format", "Requirements", "API", "Welcome to DiscTransformation\u2019s documentation!", "Disctransformation"], "terms": {"align_axi": [0, 9], "core": [0, 5, 9], "exampl": [0, 5, 7, 9], "transform": [0, 9], "create_orientation_matrix": 1, "n": [1, 5, 7, 8], "summari": [1, 2, 3, 4], "paramet": [1, 2, 3, 4, 5, 7], "type": [1, 2, 3, 4], "descript": [1, 2, 3, 4, 7], "return": [1, 2, 3, 4], "get_arbitrary_perpendicular_vector": 1, "ng": 1, "p": [1, 2, 5, 7], "avg_zstep_dist": 1, "coordsz": 1, "mdl": [1, 2, 4], "coord_a_it": 1, "coord_x": 1, "inputfil": 1, "outputfil": 1, "alignaxi": 1, "chain": 1, "alignx": 1, "t": [1, 4, 7], "b": [1, 7], "aligni": 1, "alignz": 1, "move": 1, "om": 1, "fname": [1, 2], "class": [1, 2, 4], "pdb": [1, 4, 5, 7], "filenam": [1, 2, 4], "base": [1, 2, 4], "object": [1, 2, 4, 8], "aa_length": [1, 4], "add_atom_in_model": [1, 4], "serial": [1, 4], "name": [1, 4, 5], "resnam": [1, 4], "chainid": [1, 4], "resseq": [1, 4], "x": [1, 2, 4, 5], "y": [1, 2, 4, 5], "z": [1, 4, 7], "altloc": [1, 4], "iter_length": [1, 4], "sequenc": [1, 4], "sequence_map": [1, 4], "set_t": [1, 4], "i": [1, 2, 4, 5, 6, 7, 8], "valu": [1, 2, 4, 5], "set_iter_length": [1, 4], "set_x": [1, 4], "set_i": [1, 4], "set_z": [1, 4], "write": [1, 4], "outfilenam": [1, 4], "writeca": 1, "skip_r": 1, "dta": [1, 4], "str": [1, 4], "option": [1, 2, 4, 5, 6], "write_all_chain": [1, 4], "write_select": [1, 4], "select": [1, 4], "write_selection_multimdl": [1, 4], "modelid": [1, 4], "pdb_line": [1, 4], "occup": [1, 4], "element": [1, 4], "charg": [1, 4], "icod": [1, 4], "rotation_matrix": 1, "axi": [1, 7], "theta": [1, 2], "arg": [2, 5], "translate_interacting_sit": 2, "interactingsit": 2, "build_disc": 2, "get_arg5": 2, "sl": 2, "get_arg_al": 2, "get_argu": 2, "get_dbwd": 2, "get_disc": 2, "get_drad": 2, "get_maxdist": 2, "get_mindist": 2, "get_mode_posit": 2, "get_model": 2, "get_model_id": 2, "get_nod": 2, "get_outfil": 2, "read_arguments_1": 2, "read_arguments_2": 2, "file_str": 2, "set_mode_posit": 2, "probe": 2, "write_output_fil": 2, "d": 2, "score_obj": 2, "clash_scor": 2, "main": [2, 9], "none": 2, "list": [2, 5, 7], "max_dist": 2, "model_mean": 2, "model_scor": 2, "print_model": 2, "disc": [2, 5, 7, 8], "bdm": 2, "radial_dens": 2, "generate_ensembl": 2, "output_dir": [2, 3, 5, 7], "dtmdl_param": 2, "generate_ensemble_configur": 2, "dt_ifil": 2, "input_pdb": [2, 3, 5, 7], "generate_ensemble_inputparam": 2, "discrad": 2, "generate_model_fil": 2, "dtfile": 2, "generate_pdb_camodel": 2, "counter": 2, "generate_pdb_model": 2, "generate_single_configur": 2, "generate_single_configuration_withpdb": 2, "get_all_ca_atom": 2, "get_all_atom": 2, "get_all_interacting_atom": 2, "get_full_sample_spac": 2, "number_of_mod": 2, "theta1_step": 2, "overlaprad": 2, "dwd_step": 2, "get_input_fstr": 2, "arg1": [2, 5], "arg2": [2, 5], "arg3": [2, 5], "arg4": [2, 5], "arg5": [2, 5], "arg6": [2, 5], "arg7": [2, 5], "arg8": [2, 5], "arg9": [2, 5], "arg10": [2, 5], "get_interacting_atom": 2, "validate_path": 2, "dtpath": 2, "write_dtsampling_input_fil": 2, "write_samplespac": 2, "sample_param": 2, "swline": 2, "drawinteractingsit": 2, "canva": 2, "discx": 2, "drawfinal_structur": 2, "str1": 2, "end": 2, "printdata": 2, "save_as_pdf": 2, "save_as_png": 2, "write_label": 2, "string": 2, "int": [2, 4], "d3distanc": 2, "coord1": 2, "coord2": 2, "disc_clash_counter_funct": 2, "tetramer_min_dist_funct": 2, "calculate_access": 2, "clash_and_compactness_finding_function_for_last_disc": 2, "clash_finding_function_all_vs_al": 2, "clash_finding_function_last_vs_al": 2, "compactness_finding_function_first_last_disc": 2, "disc_clash_count": 2, "distanc": [2, 5], "d1": 2, "d2": 2, "distance_matrix": 2, "gaussian_dist": 2, "mu": 2, "sigma": 2, "gaussian_phas": 2, "get_access": 2, "get_atomclash": 2, "get_cc_pair": 2, "iteridx": 2, "get_cc_scor": 2, "get_electronic_dens": 2, "get_head_posit": 2, "get_prob": 2, "get_xlink_scor": 2, "xlinkidx": 2, "get_xlinkscor": 2, "harmonic_dist": 2, "k": 2, "mean": [2, 7], "harmonic_phas": 2, "radial_dist_funct": 2, "read_allowed_st": 2, "roundupto_x": 2, "num": 2, "scoring_funct": 2, "sdistanc": 2, "search_allowed_st": 2, "tetramer_scor": 2, "translatepoint": 2, "shear": 2, "pvx": 2, "random": 2, "interv": 2, "0": [2, 5], "1": [2, 5], "arguments_pars": 2, "arguments_parse_v2": 2, "validate_arg": 2, "dtparam": 2, "cluster_model": 2, "model": [2, 4, 5, 7, 8], "get_sum_dist": 2, "distx": 2, "build_graph_model": 2, "adj_matrix": 2, "get_nodelist": 2, "get_traverse_ord": 2, "travers": 2, "node": 2, "get_connect": 2, "get_index": 2, "get_visit": 2, "set_connect": 2, "set_index": 2, "set_visit": 2, "distbd": 2, "c1": 2, "c2": 2, "calculate_angl": 2, "c3": 2, "calculate_st": 2, "crossproductdirect": 2, "get_interactingsit": 2, "set_interactingsit": 2, "set_interactionsitescent": 2, "center": [2, 5], "aphas": 2, "dvec": 2, "fix": 2, "get_id": 2, "getdc": 2, "init_new_starting_disc": 2, "drad": 2, "initdisc": 2, "vec": 2, "initnxtdisc": 2, "dbwd": 2, "l": 2, "m": 2, "q": 2, "r": 2, "": 2, "set_aphas": 2, "val": 2, "set_dcolor": 2, "set_dvec": 2, "set_fix": 2, "flag": 2, "set_id": 2, "set_l": 2, "set_m": 2, "set_p": 2, "set_q": 2, "set_r": 2, "set_": 2, "set_shear": 2, "set_theta1": 2, "set_theta2": 2, "theta1": 2, "theta2": 2, "thi": [2, 4, 5, 6, 7], "method": [2, 6], "rotat": [2, 5], "point": 2, "c": [2, 6, 8], "angl": 2, "respect": [2, 8], "pivot": 2, "pv": 2, "param": 2, "new": [2, 5, 8], "coordin": [2, 7], "createmod": 2, "j": 2, "mode": [2, 5, 7, 8], "drawmod": 2, "transform_interacting_sit": 2, "pv1x": 2, "modex": 2, "translat": [2, 5], "dc": 2, "dist2": 2, "example_sampling_run": [3, 5, 7], "input_dtfil": [3, 5, 7], "example_single_run": [3, 5, 7], "user": [3, 5, 7, 8], "neelesh": [3, 6], "work": 3, "softwares_develop": 3, "disctransformation_softwar": 3, "git_vers": 3, "input": [3, 7, 8], "gpcr_dimer": [3, 7], "txt": [3, 7], "example_single_run_withpdb": [3, 5, 7], "take": [4, 7], "perform": 4, "linear": 4, "suitabl": 4, "file": [4, 7, 8], "modifi": [4, 6], "after": [4, 5], "getdiscrepresent": 4, "add": [4, 5], "pseudoatom": 4, "everi": 4, "ca": 4, "atom": 4, "residu": 4, "can": [4, 5, 6, 7, 8], "us": [4, 5, 6, 7, 8], "visual": [4, 5, 7, 8], "format": [4, 7, 8], "addit": 4, "getdiscrepresentation_nthca": 4, "nthca": 4, "4": [4, 5], "nth": 4, "sqrdistanc": 4, "a1": 4, "a2": 4, "disctransform": [5, 6, 7], "need": [5, 7], "minimum": 5, "one": 5, "gener": [5, 6, 7], "configur": [5, 7], "specifi": [5, 7, 8], "wrapper": [5, 7, 8], "function": [5, 7], "The": [5, 7, 8], "text": 5, "start": 5, "tag": 5, "all": [5, 7], "blank": 5, "line": 5, "ignor": 5, "A": [5, 6, 7], "singl": [5, 7], "run": [5, 7], "ten": 5, "argument": 5, "These": [5, 7], "ar": [5, 7, 8], "sampl": [5, 7, 8], "ensembl": 5, "extra": 5, "six": 5, "arg11": 5, "arg12": 5, "arg13": 5, "arg14": 5, "arg15": 5, "arg16": 5, "also": [5, 7], "requir": [5, 8], "want": 5, "from": [5, 8], "accompani": 5, "directori": [5, 7], "store": [5, 7], "typic": 5, "look": 5, "like": 5, "follow": [5, 6, 7, 8], "2": 5, "23": 5, "ye": 5, "30": 5, "150": 5, "output_gpcr": [5, 7], "dt_gpcr_dimer": [5, 7], "46": 5, "20": 5, "1972243": 5, "And": 5, "3": [5, 6], "set": 5, "If": [5, 6, 7], "you": [5, 6, 7], "auto": 5, "calcul": 5, "radiu": 5, "output_gpcr_ensemble_1mod": [5, 7], "dt_gpcr_trimer": 5, "5": 5, "120": 5, "detail": [5, 6, 7], "each": [5, 8], "number": [5, 7], "label": 5, "overlap": 5, "distanvc": 5, "between": [5, 7, 8], "circumfer": 5, "centr": 5, "would": [5, 7], "henc": [5, 8], "neg": 5, "make": [5, 7], "No": 5, "associ": 5, "column": 5, "about": 5, "its": 5, "vector": 5, "rel": 5, "arrang": [5, 8], "parallel": [5, 8], "anti": [5, 8], "axial": 5, "third": 5, "dimens": 5, "have": [5, 6], "multipl": 5, "neighbour": 5, "program": [5, 6, 8], "NOT": 5, "check": 5, "logic": 5, "consist": 5, "placement": 5, "conflicit": 5, "assign": 5, "which": [5, 8], "case": [5, 7], "last": 5, "overwit": 5, "previou": 5, "record": 5, "6": 5, "squar": 5, "adjac": 5, "matrix": 5, "provid": [5, 7], "connect": 5, "7": 5, "output": [5, 7, 8], "print": 5, "8": 5, "maximum": 5, "two": [5, 7], "possibl": [5, 7, 8], "interact": [5, 7, 8], "identifi": 5, "might": 5, "happen": 5, "includ": [5, 8], "relaxt": 5, "default": [5, 7], "50": 5, "relax": 5, "unit": 5, "9": 5, "allow": 5, "ani": [5, 6], "below": [5, 7, 8], "treat": 5, "clash": 5, "taken": 5, "overlapp": 5, "For": [5, 8], "27": 5, "percentag": 5, "along": [5, 6], "Then": 5, "40": 5, "10": 5, "uniqu": 5, "dure": [5, 7], "best": 5, "skip": 5, "onli": 5, "autom": [5, 7], "see": [5, 6, 7], "11": 5, "fraction": 5, "instanc": [5, 8], "With": 5, "indic": 5, "12": 5, "step": 5, "13": 5, "til": 5, "zero": 5, "14": 5, "save": [5, 7], "avoid": [5, 7], "slow": [5, 7], "15": 5, "veri": [5, 7], "16": 5, "extern": [6, 8], "packag": [6, 8, 9], "numpi": 6, "harri": 6, "et": 6, "al": 6, "natur": 6, "2020": 6, "instal": 6, "conda": 6, "manag": 6, "recommend": 6, "scipi": 6, "virtanen": 6, "licens": 6, "copyright": 6, "2012": 6, "soni": 6, "neeleshsoni03": 6, "gmail": 6, "com": 6, "alumni": 6, "iiserpun": 6, "ac": 6, "free": 6, "softwar": [6, 8], "redistribut": 6, "under": 6, "term": 6, "gnu": 6, "public": 6, "publish": 6, "foundat": 6, "either": [6, 7], "version": [6, 8], "your": [6, 7], "later": 6, "distribut": 6, "hope": 6, "without": 6, "warranti": 6, "even": 6, "impli": 6, "merchant": 6, "fit": 6, "FOR": 6, "particular": [6, 8], "purpos": [6, 7], "more": [6, 7], "should": 6, "receiv": 6, "copi": 6, "http": 6, "www": 6, "org": 6, "demonstr": 7, "so": 7, "larg": 7, "conduct": 7, "termin": 7, "an": 7, "modul": [7, 8, 9], "test": 7, "could": [7, 8], "templat": 7, "code": [7, 8], "execut": 7, "built": 7, "import": 7, "dt": 7, "abov": [7, 8], "illustr": 7, "correspond": 7, "post": 7, "script": 7, "displai": 7, "orient": [7, 8], "quasi": [7, 8], "2d": [7, 8], "command": 7, "equival": 7, "construct": 7, "gpcr": 7, "dimer": 7, "given": [7, 8], "assum": 7, "whiol": 7, "align": [7, 9], "how": 7, "assembl": 7, "To": 7, "gpcr_helic": 7, "both": 7, "do": 7, "smapl": 7, "duriong": 7, "instead": 7, "choos": 7, "score": [7, 8], "rerun": 7, "choosen": 7, "trimer": 7, "gpcr_trimer": 7, "mer": 7, "just": 7, "build": 7, "howev": 7, "most": 7, "wouldn": 7, "know": 7, "els": 7, "why": 7, "effici": 7, "dont": 7, "over": 7, "coars": 7, "fine": 7, "grain": 7, "gpcr_trimer_sample_1mod": 7, "resolut": 7, "debug": 7, "gpcr_trimer_sample_2mod": 7, "output_gpcr_ensemble_2mod": 7, "api": 8, "index": 8, "search": 8, "page": 8, "pack": 8, "geometri": 8, "approxim": 8, "entir": 8, "molecul": 8, "domain": 8, "etc": 8, "whose": 8, "size": 8, "alter": 8, "accord": 8, "topologi": 8, "algorithm": 8, "mont": 8, "carlo": 8, "divid": 8, "conquer": 8, "conjunct": 8, "get": 8, "optim": 8, "current": 8, "support": 8, "brute": 8, "forc": 8, "develop": 8, "represent": 8, "combin": 8, "variou": 8, "scheme": 8, "solv": 8, "problem": 8, "result": 8, "inspect": 8, "evalu": 8, "written": 8, "where": 8, "envisag": 8, "when": 8, "focu": 8, "cross": 8, "section": 8, "structur": 8, "helic": 8, "bundl": 8, "obtain": 8, "experiment": 8, "sourc": 8, "e": 8, "g": 8, "fret": 8, "chemic": 8, "link": 8, "ha": 8, "capac": 8, "distinguish": 8, "differ": 8, "vertic": 8, "vice": 8, "versa": 8, "denot": 8, "quick": 8, "guid": 8, "solut": 8, "further": 8, "analysi": 8, "other": 8, "subpackag": 9, "submodul": 9, "fourier_transform": 9, "fourier_transform2d": 9, "getorient": 9, "makemov": 9, "parsepdb": 9, "pdbclass": 9, "rewritepdb2": 9, "roration_matrix2": 9, "content": 9, "build_disc_model": 9, "initiate_search": 9, "print_disc_model": 9, "score_model": 9, "addopt": 9, "cluster": 9, "create_graph": 9, "disc_stat": 9, "discstructur": 9, "disctrans_exampl": 9, "dtransform": 9}, "objects": {"": [[0, 0, 0, "-", "Disctransformation"]], "Disctransformation": [[1, 0, 0, "-", "align_axis"], [2, 0, 0, "-", "core"], [3, 0, 0, "-", "example"], [4, 0, 0, "-", "transform"]], "Disctransformation.align_axis": [[1, 0, 0, "-", "align"], [1, 0, 0, "-", "fourier_transform"], [1, 0, 0, "-", "fourier_transform2D"], [1, 0, 0, "-", "getorientation"], [1, 0, 0, "-", "main"], [1, 0, 0, "-", "makemove"], [1, 0, 0, "-", "parsepdb"], [1, 0, 0, "-", "pdbclass"], [1, 0, 0, "-", "rewritepdb2"], [1, 0, 0, "-", "roration_matrix2"]], "Disctransformation.align_axis.align": [[1, 1, 1, "", "create_orientation_matrix"], [1, 1, 1, "", "get_arbitrary_perpendicular_vector"], [1, 1, 1, "", "main"]], "Disctransformation.align_axis.fourier_transform": [[1, 1, 1, "", "avg_zstep_distance"], [1, 1, 1, "", "fourier_transform"]], "Disctransformation.align_axis.fourier_transform2D": [[1, 1, 1, "", "avg_zstep_distance"], [1, 1, 1, "", "fourier_transform"]], "Disctransformation.align_axis.getorientation": [[1, 1, 1, "", "getorientation"]], "Disctransformation.align_axis.main": [[1, 1, 1, "", "align"], [1, 1, 1, "", "alignx"], [1, 1, 1, "", "aligny"], [1, 1, 1, "", "alignz"], [1, 1, 1, "", "get_arbitrary_perpendicular_vector"]], "Disctransformation.align_axis.makemove": [[1, 1, 1, "", "move"]], "Disctransformation.align_axis.parsepdb": [[1, 1, 1, "", "parsepdb"]], "Disctransformation.align_axis.pdbclass": [[1, 2, 1, "", "PDB"], [1, 1, 1, "", "pdb_line"]], "Disctransformation.align_axis.pdbclass.PDB": [[1, 3, 1, "", "T"], [1, 3, 1, "", "aa_length"], [1, 3, 1, "", "add_atom_in_model"], [1, 3, 1, "", "altLoc"], [1, 3, 1, "", "chainID"], [1, 3, 1, "", "iter_length"], [1, 3, 1, "", "name"], [1, 3, 1, "", "resName"], [1, 3, 1, "", "resSeq"], [1, 3, 1, "", "sequence"], [1, 3, 1, "", "sequence_map"], [1, 3, 1, "", "serial"], [1, 3, 1, "", "set_T"], [1, 3, 1, "", "set_iter_length"], [1, 3, 1, "", "set_x"], [1, 3, 1, "", "set_y"], [1, 3, 1, "", "set_z"], [1, 3, 1, "", "write"], [1, 3, 1, "", "writeCA"], [1, 3, 1, "", "write_all_chains"], [1, 3, 1, "", "write_selection"], [1, 3, 1, "", "write_selection_multimdl"], [1, 3, 1, "", "x"], [1, 3, 1, "", "y"], [1, 3, 1, "", "z"]], "Disctransformation.align_axis.roration_matrix2": [[1, 1, 1, "", "rotation_matrix"]], "Disctransformation.core": [[2, 0, 0, "-", "Build_Disc_Model"], [2, 0, 0, "-", "Disctransformation"], [2, 0, 0, "-", "Initiate_Search"], [2, 0, 0, "-", "Print_Disc_Model"], [2, 0, 0, "-", "Score_Model"], [2, 0, 0, "-", "addoptions"], [2, 0, 0, "-", "cluster"], [2, 0, 0, "-", "create_graph"], [2, 0, 0, "-", "disc_state"], [2, 0, 0, "-", "discstructure"], [2, 0, 0, "-", "transformation"]], "Disctransformation.core.Build_Disc_Model": [[2, 2, 1, "", "Build_Disc_Model"]], "Disctransformation.core.Build_Disc_Model.Build_Disc_Model": [[2, 3, 1, "", "Translate_Interacting_Sites"], [2, 3, 1, "", "build_disc"], [2, 3, 1, "", "get_ARG5"], [2, 3, 1, "", "get_ARG_ALL"], [2, 3, 1, "", "get_arguments"], [2, 3, 1, "", "get_dbwd"], [2, 3, 1, "", "get_discs"], [2, 3, 1, "", "get_drad"], [2, 3, 1, "", "get_maxdist"], [2, 3, 1, "", "get_mindist"], [2, 3, 1, "", "get_mode_positions"], [2, 3, 1, "", "get_model"], [2, 3, 1, "", "get_model_id"], [2, 3, 1, "", "get_nod"], [2, 3, 1, "", "get_outfile"], [2, 3, 1, "", "read_arguments_1"], [2, 3, 1, "", "read_arguments_2"], [2, 3, 1, "", "set_mode_positions"], [2, 3, 1, "", "write_output_file"]], "Disctransformation.core.Disctransformation": [[2, 2, 1, "", "DiscTransformation"]], "Disctransformation.core.Disctransformation.DiscTransformation": [[2, 3, 1, "", "clash_score"], [2, 3, 1, "", "main"], [2, 3, 1, "", "max_dist"], [2, 3, 1, "", "model_mean"], [2, 3, 1, "", "model_score"], [2, 3, 1, "", "print_model"], [2, 3, 1, "", "radial_density"]], "Disctransformation.core.Initiate_Search": [[2, 1, 1, "", "generate_ensemble"], [2, 1, 1, "", "generate_ensemble_configurations"], [2, 1, 1, "", "generate_ensemble_inputparams"], [2, 1, 1, "", "generate_model_file"], [2, 1, 1, "", "generate_pdb_CAmodel"], [2, 1, 1, "", "generate_pdb_model"], [2, 1, 1, "", "generate_single_configuration"], [2, 1, 1, "", "generate_single_configuration_withpdb"], [2, 1, 1, "", "get_all_CA_atoms"], [2, 1, 1, "", "get_all_atoms"], [2, 1, 1, "", "get_all_interacting_atoms"], [2, 1, 1, "", "get_full_sample_space"], [2, 1, 1, "", "get_input_fstr"], [2, 1, 1, "", "get_interacting_atoms"], [2, 1, 1, "", "validate_paths"], [2, 1, 1, "", "write_dtsampling_input_file"], [2, 1, 1, "", "write_samplespace"]], "Disctransformation.core.Print_Disc_Model": [[2, 2, 1, "", "Print_Disc_Model"]], "Disctransformation.core.Print_Disc_Model.Print_Disc_Model": [[2, 3, 1, "", "DrawInteractingSites"], [2, 3, 1, "", "Drawfinal_structure"], [2, 3, 1, "", "printdata"], [2, 3, 1, "", "save_as_pdf"], [2, 3, 1, "", "save_as_png"], [2, 3, 1, "", "write_label"]], "Disctransformation.core.Score_Model": [[2, 2, 1, "", "Score_Model"], [2, 1, 1, "", "random"]], "Disctransformation.core.Score_Model.Score_Model": [[2, 3, 1, "", "D3distance"], [2, 3, 1, "", "Disc_clash_counter_function"], [2, 3, 1, "", "Tetramer_min_dist_function"], [2, 3, 1, "", "calculate_accessibility"], [2, 3, 1, "", "clash_and_compactness_finding_function_for_last_disc"], [2, 3, 1, "", "clash_finding_function_all_vs_all"], [2, 3, 1, "", "clash_finding_function_last_vs_all"], [2, 3, 1, "", "clash_score"], [2, 3, 1, "", "compactness_finding_function_first_last_disc"], [2, 3, 1, "", "disc_clash_counter"], [2, 3, 1, "", "distance"], [2, 3, 1, "", "distance_matrix"], [2, 3, 1, "", "gaussian_distance"], [2, 3, 1, "", "gaussian_phase"], [2, 3, 1, "", "get_accessibility"], [2, 3, 1, "", "get_atomclash"], [2, 3, 1, "", "get_cc_pairing"], [2, 3, 1, "", "get_cc_score"], [2, 3, 1, "", "get_electronic_density"], [2, 3, 1, "", "get_head_positions"], [2, 3, 1, "", "get_mode_positions"], [2, 3, 1, "", "get_probe"], [2, 3, 1, "", "get_xlink_score"], [2, 3, 1, "", "get_xlinkscore"], [2, 3, 1, "", "harmonic_distance"], [2, 3, 1, "", "harmonic_phase"], [2, 3, 1, "", "max_dist"], [2, 3, 1, "", "model_mean"], [2, 3, 1, "", "model_score"], [2, 4, 1, "", "probe"], [2, 3, 1, "", "radial_density"], [2, 3, 1, "", "radial_dist_function"], [2, 3, 1, "", "read_allowed_states"], [2, 3, 1, "", "roundupto_x"], [2, 3, 1, "", "scoring_function"], [2, 3, 1, "", "sdistance"], [2, 3, 1, "", "search_allowed_state"], [2, 3, 1, "", "tetramer_score"], [2, 3, 1, "", "translatepoint"]], "Disctransformation.core.addoptions": [[2, 1, 1, "", "Arguments_Parse"], [2, 1, 1, "", "Arguments_Parse_v2"], [2, 1, 1, "", "validate_args"]], "Disctransformation.core.cluster": [[2, 1, 1, "", "cluster_models"], [2, 1, 1, "", "get_sum_dist"]], "Disctransformation.core.create_graph": [[2, 2, 1, "", "Build_Graph_Model"], [2, 2, 1, "", "node"]], "Disctransformation.core.create_graph.Build_Graph_Model": [[2, 3, 1, "", "get_nodelist"], [2, 3, 1, "", "get_traverse_order"], [2, 3, 1, "", "traverse"]], "Disctransformation.core.create_graph.node": [[2, 3, 1, "", "get_connection"], [2, 3, 1, "", "get_index"], [2, 3, 1, "", "get_visit"], [2, 3, 1, "", "set_connection"], [2, 3, 1, "", "set_index"], [2, 3, 1, "", "set_visit"]], "Disctransformation.core.disc_state": [[2, 2, 1, "", "disc_state"]], "Disctransformation.core.disc_state.disc_state": [[2, 3, 1, "", "Distbd"], [2, 3, 1, "", "calculate_angle"], [2, 3, 1, "", "calculate_state"], [2, 3, 1, "", "crossProductdirection"]], "Disctransformation.core.discstructure": [[2, 2, 1, "", "discstructure"]], "Disctransformation.core.discstructure.discstructure": [[2, 3, 1, "", "Get_InteractingSites"], [2, 3, 1, "", "Set_InteractingSites"], [2, 3, 1, "", "Set_InteractionSitesCENTER"], [2, 3, 1, "", "aphase"], [2, 3, 1, "", "dvec"], [2, 3, 1, "", "fixed"], [2, 3, 1, "", "get_id"], [2, 3, 1, "", "getdc"], [2, 3, 1, "", "init_new_starting_disc"], [2, 3, 1, "", "initdisc"], [2, 3, 1, "", "initnxtdisc"], [2, 3, 1, "", "l"], [2, 3, 1, "", "m"], [2, 3, 1, "", "p"], [2, 3, 1, "", "q"], [2, 3, 1, "", "r"], [2, 3, 1, "", "s"], [2, 3, 1, "", "set_aphase"], [2, 3, 1, "", "set_dcolor"], [2, 3, 1, "", "set_dvec"], [2, 3, 1, "", "set_fixed"], [2, 3, 1, "", "set_id"], [2, 3, 1, "", "set_l"], [2, 3, 1, "", "set_m"], [2, 3, 1, "", "set_p"], [2, 3, 1, "", "set_q"], [2, 3, 1, "", "set_r"], [2, 3, 1, "", "set_s"], [2, 3, 1, "", "set_shear"], [2, 3, 1, "", "set_theta1"], [2, 3, 1, "", "set_theta2"], [2, 3, 1, "", "shear"], [2, 3, 1, "", "theta1"], [2, 3, 1, "", "theta2"]], "Disctransformation.core.transformation": [[2, 2, 1, "", "transformation"]], "Disctransformation.core.transformation.transformation": [[2, 3, 1, "", "createmode"], [2, 3, 1, "", "drawmode"], [2, 3, 1, "", "rotate"], [2, 3, 1, "", "transform_Interacting_Sites"], [2, 3, 1, "", "translate"]], "Disctransformation.example": [[3, 0, 0, "-", "disctrans_example"]], "Disctransformation.example.disctrans_example": [[3, 1, 1, "", "example_sampling_run"], [3, 1, 1, "", "example_single_run"], [3, 1, 1, "", "example_single_run_withpdb"]], "Disctransformation.transform": [[4, 0, 0, "-", "DTransform"], [4, 0, 0, "-", "pdbclass"]], "Disctransformation.transform.DTransform": [[4, 1, 1, "", "DTransform"], [4, 1, 1, "", "GetDiscRepresentation"], [4, 1, 1, "", "GetDiscRepresentation_nthCA"], [4, 1, 1, "", "sqrdistance"]], "Disctransformation.transform.pdbclass": [[4, 2, 1, "", "PDB"], [4, 1, 1, "", "pdb_line"]], "Disctransformation.transform.pdbclass.PDB": [[4, 3, 1, "", "T"], [4, 3, 1, "", "aa_length"], [4, 3, 1, "", "add_atom_in_model"], [4, 3, 1, "", "altLoc"], [4, 3, 1, "", "chainID"], [4, 3, 1, "", "iter_length"], [4, 3, 1, "", "name"], [4, 3, 1, "", "resName"], [4, 3, 1, "", "resSeq"], [4, 3, 1, "", "sequence"], [4, 3, 1, "", "sequence_map"], [4, 3, 1, "", "serial"], [4, 3, 1, "", "set_T"], [4, 3, 1, "", "set_iter_length"], [4, 3, 1, "", "set_x"], [4, 3, 1, "", "set_y"], [4, 3, 1, "", "set_z"], [4, 3, 1, "", "write"], [4, 3, 1, "", "write_all_chains"], [4, 3, 1, "", "write_selection"], [4, 3, 1, "", "write_selection_multimdl"], [4, 3, 1, "", "x"], [4, 3, 1, "", "y"], [4, 3, 1, "", "z"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"disctransform": [0, 1, 2, 3, 4, 8, 9], "packag": [0, 1, 2, 3, 4], "subpackag": 0, "modul": [0, 1, 2, 3, 4], "content": [0, 1, 2, 3, 4, 8], "align_axi": 1, "submodul": [1, 2, 3, 4], "align": 1, "fourier_transform": 1, "fourier_transform2d": 1, "getorient": 1, "main": 1, "makemov": 1, "parsepdb": 1, "pdbclass": [1, 4], "rewritepdb2": 1, "roration_matrix2": 1, "core": 2, "build_disc_model": 2, "initiate_search": 2, "print_disc_model": 2, "score_model": 2, "addopt": 2, "cluster": 2, "create_graph": 2, "disc_stat": 2, "discstructur": 2, "transform": [2, 4], "exampl": 3, "disctrans_exampl": 3, "dtransform": 4, "input": 5, "file": 5, "format": 5, "requir": 6, "api": 7, "welcom": 8, "": 8, "document": 8, "indic": 8, "tabl": 8, "background": 8, "relev": 8, "molecular": 8, "architectur": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Disctransformation package": [[0, "disctransformation-package"]], "Subpackages": [[0, "subpackages"]], "Module contents": [[0, "module-Disctransformation"], [1, "module-Disctransformation.align_axis"], [2, "module-Disctransformation.core"], [3, "module-Disctransformation.example"], [4, "module-Disctransformation.transform"]], "Disctransformation.align_axis package": [[1, "disctransformation-align-axis-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"]], "Disctransformation.align_axis.align module": [[1, "module-Disctransformation.align_axis.align"]], "Disctransformation.align_axis.fourier_transform module": [[1, "module-Disctransformation.align_axis.fourier_transform"]], "Disctransformation.align_axis.fourier_transform2D module": [[1, "module-Disctransformation.align_axis.fourier_transform2D"]], "Disctransformation.align_axis.getorientation module": [[1, "module-Disctransformation.align_axis.getorientation"]], "Disctransformation.align_axis.main module": [[1, "module-Disctransformation.align_axis.main"]], "Disctransformation.align_axis.makemove module": [[1, "module-Disctransformation.align_axis.makemove"]], "Disctransformation.align_axis.parsepdb module": [[1, "module-Disctransformation.align_axis.parsepdb"]], "Disctransformation.align_axis.pdbclass module": [[1, "module-Disctransformation.align_axis.pdbclass"]], "Disctransformation.align_axis.rewritepdb2 module": [[1, "module-Disctransformation.align_axis.rewritepdb2"]], "Disctransformation.align_axis.roration_matrix2 module": [[1, "module-Disctransformation.align_axis.roration_matrix2"]], "Disctransformation.core package": [[2, "disctransformation-core-package"]], "Disctransformation.core.Build_Disc_Model module": [[2, "module-Disctransformation.core.Build_Disc_Model"]], "Disctransformation.core.Disctransformation module": [[2, "module-Disctransformation.core.Disctransformation"]], "Disctransformation.core.Initiate_Search module": [[2, "module-Disctransformation.core.Initiate_Search"]], "Disctransformation.core.Print_Disc_Model module": [[2, "module-Disctransformation.core.Print_Disc_Model"]], "Disctransformation.core.Score_Model module": [[2, "module-Disctransformation.core.Score_Model"]], "Disctransformation.core.addoptions module": [[2, "module-Disctransformation.core.addoptions"]], "Disctransformation.core.cluster module": [[2, "module-Disctransformation.core.cluster"]], "Disctransformation.core.create_graph module": [[2, "module-Disctransformation.core.create_graph"]], "Disctransformation.core.disc_state module": [[2, "module-Disctransformation.core.disc_state"]], "Disctransformation.core.discstructure module": [[2, "module-Disctransformation.core.discstructure"]], "Disctransformation.core.transformation module": [[2, "module-Disctransformation.core.transformation"]], "Disctransformation.example package": [[3, "disctransformation-example-package"]], "Disctransformation.example.disctrans_example module": [[3, "module-Disctransformation.example.disctrans_example"]], "Disctransformation.transform package": [[4, "disctransformation-transform-package"]], "Disctransformation.transform.DTransform module": [[4, "module-Disctransformation.transform.DTransform"]], "Disctransformation.transform.pdbclass module": [[4, "module-Disctransformation.transform.pdbclass"]], "Input File Format": [[5, "input-file-format"]], "Requirements": [[6, "requirements"]], "API": [[7, "api"]], "Welcome to DiscTransformation\u2019s documentation!": [[8, "welcome-to-disctransformation-s-documentation"]], "Contents:": [[8, null]], "Indices and tables": [[8, "indices-and-tables"]], "Disctransformation Background": [[8, "disctransformation-background"]], "Relevance to the molecular architectures": [[8, "relevance-to-the-molecular-architectures"]], "Disctransformation": [[9, "disctransformation"]]}, "indexentries": {"disctransformation": [[0, "module-Disctransformation"]], "module": [[0, "module-Disctransformation"], [1, "module-Disctransformation.align_axis"], [1, "module-Disctransformation.align_axis.align"], [1, "module-Disctransformation.align_axis.fourier_transform"], [1, "module-Disctransformation.align_axis.fourier_transform2D"], [1, "module-Disctransformation.align_axis.getorientation"], [1, "module-Disctransformation.align_axis.main"], [1, "module-Disctransformation.align_axis.makemove"], [1, "module-Disctransformation.align_axis.parsepdb"], [1, "module-Disctransformation.align_axis.pdbclass"], [1, "module-Disctransformation.align_axis.rewritepdb2"], [1, "module-Disctransformation.align_axis.roration_matrix2"], [2, "module-Disctransformation.core"], [2, "module-Disctransformation.core.Build_Disc_Model"], [2, "module-Disctransformation.core.Disctransformation"], [2, "module-Disctransformation.core.Initiate_Search"], [2, "module-Disctransformation.core.Print_Disc_Model"], [2, "module-Disctransformation.core.Score_Model"], [2, "module-Disctransformation.core.addoptions"], [2, "module-Disctransformation.core.cluster"], [2, "module-Disctransformation.core.create_graph"], [2, "module-Disctransformation.core.disc_state"], [2, "module-Disctransformation.core.discstructure"], [2, "module-Disctransformation.core.transformation"], [3, "module-Disctransformation.example"], [3, "module-Disctransformation.example.disctrans_example"], [4, "module-Disctransformation.transform"], [4, "module-Disctransformation.transform.DTransform"], [4, "module-Disctransformation.transform.pdbclass"]], "disctransformation.align_axis": [[1, "module-Disctransformation.align_axis"]], "disctransformation.align_axis.align": [[1, "module-Disctransformation.align_axis.align"]], "disctransformation.align_axis.fourier_transform": [[1, "module-Disctransformation.align_axis.fourier_transform"]], "disctransformation.align_axis.fourier_transform2d": [[1, "module-Disctransformation.align_axis.fourier_transform2D"]], "disctransformation.align_axis.getorientation": [[1, "module-Disctransformation.align_axis.getorientation"]], "disctransformation.align_axis.main": [[1, "module-Disctransformation.align_axis.main"]], "disctransformation.align_axis.makemove": [[1, "module-Disctransformation.align_axis.makemove"]], "disctransformation.align_axis.parsepdb": [[1, "module-Disctransformation.align_axis.parsepdb"]], "disctransformation.align_axis.pdbclass": [[1, "module-Disctransformation.align_axis.pdbclass"]], "disctransformation.align_axis.rewritepdb2": [[1, "module-Disctransformation.align_axis.rewritepdb2"]], "disctransformation.align_axis.roration_matrix2": [[1, "module-Disctransformation.align_axis.roration_matrix2"]], "pdb (class in disctransformation.align_axis.pdbclass)": [[1, "Disctransformation.align_axis.pdbclass.PDB"]], "t() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.T"]], "aa_length() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.aa_length"]], "add_atom_in_model() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.add_atom_in_model"]], "align() (in module disctransformation.align_axis.main)": [[1, "Disctransformation.align_axis.main.align"]], "alignx() (in module disctransformation.align_axis.main)": [[1, "Disctransformation.align_axis.main.alignx"]], "aligny() (in module disctransformation.align_axis.main)": [[1, "Disctransformation.align_axis.main.aligny"]], "alignz() (in module disctransformation.align_axis.main)": [[1, "Disctransformation.align_axis.main.alignz"]], "altloc() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.altLoc"]], "avg_zstep_distance() (in module disctransformation.align_axis.fourier_transform)": [[1, "Disctransformation.align_axis.fourier_transform.avg_zstep_distance"]], "avg_zstep_distance() (in module disctransformation.align_axis.fourier_transform2d)": [[1, "Disctransformation.align_axis.fourier_transform2D.avg_zstep_distance"]], "chainid() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.chainID"]], "create_orientation_matrix() (in module disctransformation.align_axis.align)": [[1, "Disctransformation.align_axis.align.create_orientation_matrix"]], "fourier_transform() (in module disctransformation.align_axis.fourier_transform)": [[1, "Disctransformation.align_axis.fourier_transform.fourier_transform"]], "fourier_transform() (in module disctransformation.align_axis.fourier_transform2d)": [[1, "Disctransformation.align_axis.fourier_transform2D.fourier_transform"]], "get_arbitrary_perpendicular_vector() (in module disctransformation.align_axis.align)": [[1, "Disctransformation.align_axis.align.get_arbitrary_perpendicular_vector"]], "get_arbitrary_perpendicular_vector() (in module disctransformation.align_axis.main)": [[1, "Disctransformation.align_axis.main.get_arbitrary_perpendicular_vector"]], "getorientation() (in module disctransformation.align_axis.getorientation)": [[1, "Disctransformation.align_axis.getorientation.getorientation"]], "iter_length() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.iter_length"]], "main() (in module disctransformation.align_axis.align)": [[1, "Disctransformation.align_axis.align.main"]], "move() (in module disctransformation.align_axis.makemove)": [[1, "Disctransformation.align_axis.makemove.move"]], "name() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.name"]], "parsepdb() (in module disctransformation.align_axis.parsepdb)": [[1, "Disctransformation.align_axis.parsepdb.parsepdb"]], "pdb_line() (in module disctransformation.align_axis.pdbclass)": [[1, "Disctransformation.align_axis.pdbclass.pdb_line"]], "resname() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.resName"]], "resseq() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.resSeq"]], "rotation_matrix() (in module disctransformation.align_axis.roration_matrix2)": [[1, "Disctransformation.align_axis.roration_matrix2.rotation_matrix"]], "sequence() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.sequence"]], "sequence_map() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.sequence_map"]], "serial() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.serial"]], "set_t() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.set_T"]], "set_iter_length() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.set_iter_length"]], "set_x() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.set_x"]], "set_y() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.set_y"]], "set_z() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.set_z"]], "write() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.write"]], "writeca() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.writeCA"]], "write_all_chains() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.write_all_chains"]], "write_selection() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.write_selection"]], "write_selection_multimdl() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.write_selection_multimdl"]], "x() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.x"]], "y() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.y"]], "z() (disctransformation.align_axis.pdbclass.pdb method)": [[1, "Disctransformation.align_axis.pdbclass.PDB.z"]], "arguments_parse() (in module disctransformation.core.addoptions)": [[2, "Disctransformation.core.addoptions.Arguments_Parse"]], "arguments_parse_v2() (in module disctransformation.core.addoptions)": [[2, "Disctransformation.core.addoptions.Arguments_Parse_v2"]], "build_disc_model (class in disctransformation.core.build_disc_model)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model"]], "build_graph_model (class in disctransformation.core.create_graph)": [[2, "Disctransformation.core.create_graph.Build_Graph_Model"]], "d3distance() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.D3distance"]], "disctransformation (class in disctransformation.core.disctransformation)": [[2, "Disctransformation.core.Disctransformation.DiscTransformation"]], "disc_clash_counter_function() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.Disc_clash_counter_function"]], "disctransformation.core": [[2, "module-Disctransformation.core"]], "disctransformation.core.build_disc_model": [[2, "module-Disctransformation.core.Build_Disc_Model"]], "disctransformation.core.disctransformation": [[2, "module-Disctransformation.core.Disctransformation"]], "disctransformation.core.initiate_search": [[2, "module-Disctransformation.core.Initiate_Search"]], "disctransformation.core.print_disc_model": [[2, "module-Disctransformation.core.Print_Disc_Model"]], "disctransformation.core.score_model": [[2, "module-Disctransformation.core.Score_Model"]], "disctransformation.core.addoptions": [[2, "module-Disctransformation.core.addoptions"]], "disctransformation.core.cluster": [[2, "module-Disctransformation.core.cluster"]], "disctransformation.core.create_graph": [[2, "module-Disctransformation.core.create_graph"]], "disctransformation.core.disc_state": [[2, "module-Disctransformation.core.disc_state"]], "disctransformation.core.discstructure": [[2, "module-Disctransformation.core.discstructure"]], "disctransformation.core.transformation": [[2, "module-Disctransformation.core.transformation"]], "distbd() (disctransformation.core.disc_state.disc_state method)": [[2, "Disctransformation.core.disc_state.disc_state.Distbd"]], "drawinteractingsites() (disctransformation.core.print_disc_model.print_disc_model method)": [[2, "Disctransformation.core.Print_Disc_Model.Print_Disc_Model.DrawInteractingSites"]], "drawfinal_structure() (disctransformation.core.print_disc_model.print_disc_model method)": [[2, "Disctransformation.core.Print_Disc_Model.Print_Disc_Model.Drawfinal_structure"]], "get_interactingsites() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.Get_InteractingSites"]], "print_disc_model (class in disctransformation.core.print_disc_model)": [[2, "Disctransformation.core.Print_Disc_Model.Print_Disc_Model"]], "score_model (class in disctransformation.core.score_model)": [[2, "Disctransformation.core.Score_Model.Score_Model"]], "set_interactingsites() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.Set_InteractingSites"]], "set_interactionsitescenter() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.Set_InteractionSitesCENTER"]], "tetramer_min_dist_function() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.Tetramer_min_dist_function"]], "translate_interacting_sites() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.Translate_Interacting_Sites"]], "aphase() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.aphase"]], "build_disc() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.build_disc"]], "calculate_accessibility() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.calculate_accessibility"]], "calculate_angle() (disctransformation.core.disc_state.disc_state method)": [[2, "Disctransformation.core.disc_state.disc_state.calculate_angle"]], "calculate_state() (disctransformation.core.disc_state.disc_state method)": [[2, "Disctransformation.core.disc_state.disc_state.calculate_state"]], "clash_and_compactness_finding_function_for_last_disc() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.clash_and_compactness_finding_function_for_last_disc"]], "clash_finding_function_all_vs_all() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.clash_finding_function_all_vs_all"]], "clash_finding_function_last_vs_all() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.clash_finding_function_last_vs_all"]], "clash_score() (disctransformation.core.disctransformation.disctransformation method)": [[2, "Disctransformation.core.Disctransformation.DiscTransformation.clash_score"]], "clash_score() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.clash_score"]], "cluster_models() (in module disctransformation.core.cluster)": [[2, "Disctransformation.core.cluster.cluster_models"]], "compactness_finding_function_first_last_disc() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.compactness_finding_function_first_last_disc"]], "createmode() (disctransformation.core.transformation.transformation method)": [[2, "Disctransformation.core.transformation.transformation.createmode"]], "crossproductdirection() (disctransformation.core.disc_state.disc_state method)": [[2, "Disctransformation.core.disc_state.disc_state.crossProductdirection"]], "disc_clash_counter() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.disc_clash_counter"]], "disc_state (class in disctransformation.core.disc_state)": [[2, "Disctransformation.core.disc_state.disc_state"]], "discstructure (class in disctransformation.core.discstructure)": [[2, "Disctransformation.core.discstructure.discstructure"]], "distance() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.distance"]], "distance_matrix() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.distance_matrix"]], "drawmode() (disctransformation.core.transformation.transformation method)": [[2, "Disctransformation.core.transformation.transformation.drawmode"]], "dvec() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.dvec"]], "fixed() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.fixed"]], "gaussian_distance() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.gaussian_distance"]], "gaussian_phase() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.gaussian_phase"]], "generate_ensemble() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.generate_ensemble"]], "generate_ensemble_configurations() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.generate_ensemble_configurations"]], "generate_ensemble_inputparams() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.generate_ensemble_inputparams"]], "generate_model_file() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.generate_model_file"]], "generate_pdb_camodel() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.generate_pdb_CAmodel"]], "generate_pdb_model() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.generate_pdb_model"]], "generate_single_configuration() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.generate_single_configuration"]], "generate_single_configuration_withpdb() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.generate_single_configuration_withpdb"]], "get_arg5() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_ARG5"]], "get_arg_all() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_ARG_ALL"]], "get_accessibility() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.get_accessibility"]], "get_all_ca_atoms() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.get_all_CA_atoms"]], "get_all_atoms() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.get_all_atoms"]], "get_all_interacting_atoms() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.get_all_interacting_atoms"]], "get_arguments() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_arguments"]], "get_atomclash() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.get_atomclash"]], "get_cc_pairing() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.get_cc_pairing"]], "get_cc_score() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.get_cc_score"]], "get_connection() (disctransformation.core.create_graph.node method)": [[2, "Disctransformation.core.create_graph.node.get_connection"]], "get_dbwd() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_dbwd"]], "get_discs() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_discs"]], "get_drad() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_drad"]], "get_electronic_density() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.get_electronic_density"]], "get_full_sample_space() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.get_full_sample_space"]], "get_head_positions() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.get_head_positions"]], "get_id() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.get_id"]], "get_index() (disctransformation.core.create_graph.node method)": [[2, "Disctransformation.core.create_graph.node.get_index"]], "get_input_fstr() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.get_input_fstr"]], "get_interacting_atoms() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.get_interacting_atoms"]], "get_maxdist() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_maxdist"]], "get_mindist() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_mindist"]], "get_mode_positions() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_mode_positions"]], "get_mode_positions() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.get_mode_positions"]], "get_model() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_model"]], "get_model_id() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_model_id"]], "get_nod() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_nod"]], "get_nodelist() (disctransformation.core.create_graph.build_graph_model method)": [[2, "Disctransformation.core.create_graph.Build_Graph_Model.get_nodelist"]], "get_outfile() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.get_outfile"]], "get_probe() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.get_probe"]], "get_sum_dist() (in module disctransformation.core.cluster)": [[2, "Disctransformation.core.cluster.get_sum_dist"]], "get_traverse_order() (disctransformation.core.create_graph.build_graph_model method)": [[2, "Disctransformation.core.create_graph.Build_Graph_Model.get_traverse_order"]], "get_visit() (disctransformation.core.create_graph.node method)": [[2, "Disctransformation.core.create_graph.node.get_visit"]], "get_xlink_score() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.get_xlink_score"]], "get_xlinkscore() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.get_xlinkscore"]], "getdc() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.getdc"]], "harmonic_distance() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.harmonic_distance"]], "harmonic_phase() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.harmonic_phase"]], "init_new_starting_disc() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.init_new_starting_disc"]], "initdisc() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.initdisc"]], "initnxtdisc() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.initnxtdisc"]], "l() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.l"]], "m() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.m"]], "main() (disctransformation.core.disctransformation.disctransformation method)": [[2, "Disctransformation.core.Disctransformation.DiscTransformation.main"]], "max_dist() (disctransformation.core.disctransformation.disctransformation method)": [[2, "Disctransformation.core.Disctransformation.DiscTransformation.max_dist"]], "max_dist() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.max_dist"]], "model_mean() (disctransformation.core.disctransformation.disctransformation method)": [[2, "Disctransformation.core.Disctransformation.DiscTransformation.model_mean"]], "model_mean() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.model_mean"]], "model_score() (disctransformation.core.disctransformation.disctransformation method)": [[2, "Disctransformation.core.Disctransformation.DiscTransformation.model_score"]], "model_score() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.model_score"]], "node (class in disctransformation.core.create_graph)": [[2, "Disctransformation.core.create_graph.node"]], "p() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.p"]], "print_model() (disctransformation.core.disctransformation.disctransformation method)": [[2, "Disctransformation.core.Disctransformation.DiscTransformation.print_model"]], "printdata() (disctransformation.core.print_disc_model.print_disc_model method)": [[2, "Disctransformation.core.Print_Disc_Model.Print_Disc_Model.printdata"]], "probe (disctransformation.core.score_model.score_model attribute)": [[2, "Disctransformation.core.Score_Model.Score_Model.probe"]], "q() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.q"]], "r() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.r"]], "radial_density() (disctransformation.core.disctransformation.disctransformation method)": [[2, "Disctransformation.core.Disctransformation.DiscTransformation.radial_density"]], "radial_density() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.radial_density"]], "radial_dist_function() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.radial_dist_function"]], "random() (in module disctransformation.core.score_model)": [[2, "Disctransformation.core.Score_Model.random"]], "read_allowed_states() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.read_allowed_states"]], "read_arguments_1() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.read_arguments_1"]], "read_arguments_2() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.read_arguments_2"]], "rotate() (disctransformation.core.transformation.transformation method)": [[2, "Disctransformation.core.transformation.transformation.rotate"]], "roundupto_x() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.roundupto_x"]], "s() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.s"]], "save_as_pdf() (disctransformation.core.print_disc_model.print_disc_model method)": [[2, "Disctransformation.core.Print_Disc_Model.Print_Disc_Model.save_as_pdf"]], "save_as_png() (disctransformation.core.print_disc_model.print_disc_model method)": [[2, "Disctransformation.core.Print_Disc_Model.Print_Disc_Model.save_as_png"]], "scoring_function() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.scoring_function"]], "sdistance() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.sdistance"]], "search_allowed_state() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.search_allowed_state"]], "set_aphase() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_aphase"]], "set_connection() (disctransformation.core.create_graph.node method)": [[2, "Disctransformation.core.create_graph.node.set_connection"]], "set_dcolor() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_dcolor"]], "set_dvec() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_dvec"]], "set_fixed() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_fixed"]], "set_id() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_id"]], "set_index() (disctransformation.core.create_graph.node method)": [[2, "Disctransformation.core.create_graph.node.set_index"]], "set_l() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_l"]], "set_m() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_m"]], "set_mode_positions() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.set_mode_positions"]], "set_p() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_p"]], "set_q() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_q"]], "set_r() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_r"]], "set_s() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_s"]], "set_shear() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_shear"]], "set_theta1() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_theta1"]], "set_theta2() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.set_theta2"]], "set_visit() (disctransformation.core.create_graph.node method)": [[2, "Disctransformation.core.create_graph.node.set_visit"]], "shear() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.shear"]], "tetramer_score() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.tetramer_score"]], "theta1() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.theta1"]], "theta2() (disctransformation.core.discstructure.discstructure method)": [[2, "Disctransformation.core.discstructure.discstructure.theta2"]], "transform_interacting_sites() (disctransformation.core.transformation.transformation method)": [[2, "Disctransformation.core.transformation.transformation.transform_Interacting_Sites"]], "transformation (class in disctransformation.core.transformation)": [[2, "Disctransformation.core.transformation.transformation"]], "translate() (disctransformation.core.transformation.transformation method)": [[2, "Disctransformation.core.transformation.transformation.translate"]], "translatepoint() (disctransformation.core.score_model.score_model method)": [[2, "Disctransformation.core.Score_Model.Score_Model.translatepoint"]], "traverse() (disctransformation.core.create_graph.build_graph_model method)": [[2, "Disctransformation.core.create_graph.Build_Graph_Model.traverse"]], "validate_args() (in module disctransformation.core.addoptions)": [[2, "Disctransformation.core.addoptions.validate_args"]], "validate_paths() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.validate_paths"]], "write_dtsampling_input_file() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.write_dtsampling_input_file"]], "write_label() (disctransformation.core.print_disc_model.print_disc_model method)": [[2, "Disctransformation.core.Print_Disc_Model.Print_Disc_Model.write_label"]], "write_output_file() (disctransformation.core.build_disc_model.build_disc_model method)": [[2, "Disctransformation.core.Build_Disc_Model.Build_Disc_Model.write_output_file"]], "write_samplespace() (in module disctransformation.core.initiate_search)": [[2, "Disctransformation.core.Initiate_Search.write_samplespace"]], "disctransformation.example": [[3, "module-Disctransformation.example"]], "disctransformation.example.disctrans_example": [[3, "module-Disctransformation.example.disctrans_example"]], "example_sampling_run() (in module disctransformation.example.disctrans_example)": [[3, "Disctransformation.example.disctrans_example.example_sampling_run"]], "example_single_run() (in module disctransformation.example.disctrans_example)": [[3, "Disctransformation.example.disctrans_example.example_single_run"]], "example_single_run_withpdb() (in module disctransformation.example.disctrans_example)": [[3, "Disctransformation.example.disctrans_example.example_single_run_withpdb"]], "dtransform() (in module disctransformation.transform.dtransform)": [[4, "Disctransformation.transform.DTransform.DTransform"]], "disctransformation.transform": [[4, "module-Disctransformation.transform"]], "disctransformation.transform.dtransform": [[4, "module-Disctransformation.transform.DTransform"]], "disctransformation.transform.pdbclass": [[4, "module-Disctransformation.transform.pdbclass"]], "getdiscrepresentation() (in module disctransformation.transform.dtransform)": [[4, "Disctransformation.transform.DTransform.GetDiscRepresentation"]], "getdiscrepresentation_nthca() (in module disctransformation.transform.dtransform)": [[4, "Disctransformation.transform.DTransform.GetDiscRepresentation_nthCA"]], "pdb (class in disctransformation.transform.pdbclass)": [[4, "Disctransformation.transform.pdbclass.PDB"]], "t() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.T"]], "aa_length() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.aa_length"]], "add_atom_in_model() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.add_atom_in_model"]], "altloc() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.altLoc"]], "chainid() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.chainID"]], "iter_length() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.iter_length"]], "name() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.name"]], "pdb_line() (in module disctransformation.transform.pdbclass)": [[4, "Disctransformation.transform.pdbclass.pdb_line"]], "resname() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.resName"]], "resseq() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.resSeq"]], "sequence() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.sequence"]], "sequence_map() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.sequence_map"]], "serial() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.serial"]], "set_t() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.set_T"]], "set_iter_length() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.set_iter_length"]], "set_x() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.set_x"]], "set_y() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.set_y"]], "set_z() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.set_z"]], "sqrdistance() (in module disctransformation.transform.dtransform)": [[4, "Disctransformation.transform.DTransform.sqrdistance"]], "write() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.write"]], "write_all_chains() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.write_all_chains"]], "write_selection() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.write_selection"]], "write_selection_multimdl() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.write_selection_multimdl"]], "x() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.x"]], "y() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.y"]], "z() (disctransformation.transform.pdbclass.pdb method)": [[4, "Disctransformation.transform.pdbclass.PDB.z"]]}})